<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vians.admin.mapper.AuthorizeMapper">

    <sql id="Base_Column_List">
        ac_id AS id,
        ac_content AS content,
        ac_type AS type,
        ac_user_id AS userId,
        ac_position AS position,
        ac_time_type AS timeType,
        ac_start_time AS startTime,
        ac_end_time AS endTime
    </sql>

    <select id="getAuthorizeList" parameterType="long" resultType="com.vians.admin.model.AuthorizeInfo">
        select ar.ar_id as id,
               a.a_value as content,
               a.a_type as type,
               a.a_user_id as userId,
               ar.ar_position as position,
               a.a_time_type as timeType,
               a.a_start_time as startTime,
               a.a_end_time as endTime
        from vi_authorize_room ar
            left join vi_authorize a on a.a_id = ar.ar_authorize_id
        where ar.ar_room_id = #{roomId} and a.a_user_id = #{userId}
    </select>

    <insert id="addAuthorize"
            useGeneratedKeys="true"
            keyColumn="a_id"
            keyProperty="id"
            parameterType="com.vians.admin.request.RxAuthorize">
        INSERT INTO vi_authorize
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">
                a_value,
            </if>
            <if test="type != 0">
                a_type,
            </if>
            <if test="userId != 0">
                a_user_id,
            </if>
            <if test="timeType != 0">
                a_time_type,
            </if>
            <if test="startTime != null">
                a_start_time,
            </if>
            <if test="endTime != null">
                a_end_time,
            </if>
            <if test="tempContentId != 0">
                a_temp_content_id,
            </if>
            <if test="imgContentId != 0">
                a_img_content_id,
            </if>
            <if test="createUserId != 0">
                a_create_user_id,
            </if>
            <if test="createTime != null">
                a_create_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">
                #{content},
            </if>
            <if test="type != 0">
                #{type},
            </if>
            <if test="userId != 0">
                #{userId},
            </if>
            <if test="timeType != 0">
                #{timeType},
            </if>
            <if test="startTime != null">
                #{startTime},
            </if>
            <if test="endTime != null">
                #{endTime},
            </if>
            <if test="tempContentId != 0">
                #{tempContentId},
            </if>
            <if test="imgContentId != 0">
                #{imgContentId},
            </if>
            <if test="createUserId != 0">
                #{createUserId},
            </if>
            <if test="createTime != null">
                #{createTime}
            </if>
        </trim>
    </insert>

    <update id="updateAuthorize" parameterType="com.vians.admin.request.RxAuthorize">
        update vi_authorize
        <set>
            <if test="type != 0">
                a_type = #{type},
            </if>
            <if test="userId != 0">
                a_user_id = #{userId},
            </if>
            <if test="timeType != 0">
                a_time_type = #{timeType},
            </if>
            <if test="startTime != null">
                a_start_time = #{startTime},
            </if>
            <if test="endTime != null">
                a_end_time = #{endTime},
            </if>
            <if test="tempContentId != 0">
                a_temp_content_id = #{tempContentId},
            </if>
            <if test="imgContentId != 0">
                a_img_cotent_id = #{imgContentId},
            </if>
            <if test="createUserId != 0">
                a_create_user_id = #{createUserId},
            </if>
            <if test="updateTime != null">
                a_update_time = #{updateTime}
            </if>
        </set>
        <where>
            a_value = #{content}
        </where>
    </update>

    <delete id="deleteAuthorize" parameterType="long">
        delete from vi_authorize_room where ar_id = #{id}
    </delete>

    <delete id="deleteAuthorizeByRoom">
        DELETE vi_authorize_room
        FROM
            vi_authorize_room
                LEFT JOIN vi_authorize ON vi_authorize_room.ar_authorize_id = vi_authorize.a_id
        WHERE
            vi_authorize_room.ar_room_id = #{roomId}
          AND vi_authorize.a_type = #{type}
    </delete>

    <delete id="deleteAuthorizeTempContent">
        DELETE vi_authorize_content
        FROM vi_authorize_content
                LEFT JOIN vi_authorize on vi_authorize_content.ac_id = vi_authorize.a_temp_content_id
        WHERE vi_authorize.a_id = #{authorizeId}
    </delete>

    <select id="findAuthorizeByValue" resultType="com.vians.admin.model.AuthorizeInfo">
        SELECT
            a.a_id AS id,
            a.a_value AS content,
            a.a_type AS type,
            ar.ar_position AS position,
            a.a_time_type AS timeType,
            a.a_start_time AS startTime,
            a.a_end_time AS endTime
        FROM
            vi_authorize a
                LEFT JOIN vi_authorize_room ar ON a.a_id = ar.ar_authorize_id
        WHERE
            a.a_value = #{value} AND ar.ar_room_id = #{roomId}
        LIMIT 1
    </select>

    <delete id="deleteAuthorizeTempContentByRoom">
    </delete>

    <delete id="deleteAuthorizeByUser" parameterType="long">
        DELETE vi_authorize,
            vi_authorize_content
        FROM
            vi_authorize
                LEFT JOIN vi_authorize_content ON vi_authorize.a_temp_content_id = vi_authorize_content.ac_id
        WHERE
            a_user_id = #{userId}
    </delete>

    <select id="findEmptyPosition" resultType="int">
        SELECT IF(NOT EXISTS
            (
                SELECT ar.*
                FROM vi_authorize_room ar
                         LEFT JOIN vi_authorize a ON a.a_id = ar.ar_authorize_id
                WHERE ar.ar_room_id = #{roomId}
                  AND a.a_type = #{type}
                  AND ar.ar_position = 1
            ), 1, (
                      SELECT MIN(arA.ar_position) + 1 AS missing
                      FROM (
                               SELECT ar.*
                               FROM vi_authorize_room ar
                                        LEFT JOIN vi_authorize a ON a.a_id = ar.ar_authorize_id
                               WHERE ar.ar_room_id = #{roomId}
                                 AND a.a_type = #{type}
                           ) arA
                      WHERE NOT EXISTS(
                              SELECT arB.*
                              FROM vi_authorize_room arB
                                       LEFT JOIN vi_authorize a ON a.a_id = arB.ar_authorize_id
                              WHERE arB.ar_room_id = #{roomId}
                                AND a.a_type = #{type}
                                AND arA.ar_position + 1 = arB.ar_position
                          ))) AS missing;
    </select>

    <insert id="addAuthorizeRoom" parameterType="com.vians.admin.model.AuthorizeRoomInfo">
        INSERT INTO vi_authorize_room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roomId != 0">
                ar_room_id,
            </if>
            <if test="authorizeId != 0">
                ar_authorize_id,
            </if>
            <if test="position != 0">
                ar_position,
            </if>
            <if test="createTime != null">
                ar_create_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roomId != 0">
                #{roomId},
            </if>
            <if test="authorizeId != 0">
                #{authorizeId},
            </if>
            <if test="position != 0">
                #{position},
            </if>
            <if test="createTime != null">
                #{createTime}
            </if>
        </trim>
    </insert>

    <insert id="addAuthorizeContent"
            useGeneratedKeys="true"
            keyProperty="id"
            keyColumn="ac_id"
            parameterType="com.vians.admin.model.AuthorizeContentInfo">
        INSERT INTO vi_authorize_content
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">
                ac_content,
            </if>
            <if test="type != 0">
                ac_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="content != null and content != ''">
                #{content},
            </if>
            <if test="type != 0">
                #{type},
            </if>
        </trim>
    </insert>

    <update id="updateAuthorizeRoom" parameterType="com.vians.admin.model.AuthorizeRoomInfo">
        update vi_authorize_room ar
            left join vi_authorize a
                on ar.ar_authorize_id = a.a_id
            set ar.ar_authorize_id = #{authorizeId},
                ar.ar_update_time = #{updateTime}
            where ar.ar_room_id = #{roomId}
              and ar.ar_position = #{position}
              and a.a_type = #{authorizeType}
    </update>
</mapper>
