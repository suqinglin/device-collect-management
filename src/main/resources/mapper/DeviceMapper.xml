<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vians.admin.mapper.DeviceMapper">

    <sql id="Base_Column_List">
        d_id AS id,
        d_uuid AS uuid,
        d_mac AS macNum,
        d_sn AS snNum,
        d_model AS model,
        d_hw_version AS hwVersion,
        d_fw_version AS fwVersion,
        d_manufacturer AS manufacturer,
        d_tool_id AS tooId,
        d_create_time AS createTime,
        d_user_id AS userId,
        d_token AS token
    </sql>

    <select id="getCollectDevicesByUser" parameterType="long" resultType="com.vians.admin.model.DeviceBaseInfo">
        select db.db_name as Name,
               db.db_Mac as MAC
        from xy_areadeviceinfo ac
        left join xy_devicebaseinfo db on ac.ad_deviceid = db.db_ID
        where ac.ad_ManagerUser = #{userId} and db.db_message = 'VI_AUT01A'
    </select>

    <select id="getDeviceByMac" resultType="com.vians.admin.model.DeviceInfo">
        select
        <include refid="Base_Column_List" />
        from xy_dc_deviceinfo
        <where>
            d_mac = #{mac}
        </where>
        LIMIT 1
    </select>

    <select id="getDeviceByRoomId" resultType="com.vians.admin.model.DeviceBaseInfo">
        select
        d.d_id AS id,
        d.d_mac AS MAC,
        d.d_gw_mac AS GwMac,
        d.d_model AS Device,
        d.d_name AS NAME,
        d.d_feature AS Feature,
        d.d_active AS Active,
        d.d_index AS idx,
        d.d_create_user_id AS userId,
        d.d_create_time AS createTime,
        d.d_ele AS ele
        from vi_device d
        <where>
            d_room_id = #{roomId}
        </where>
        LIMIT 1
    </select>

    <insert id="addDevice" parameterType="com.vians.admin.model.DeviceBaseInfo">

        insert into vi_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="MAC != null and MAC != ''">
                d_mac,
            </if>
            <if test="GwMac != null and GwMac != ''">
                d_gw_mac,
            </if>
            <if test="Device != null and Device != ''">
                d_model,
            </if>
            <if test="Name != null and Name != ''">
                d_name,
            </if>
            <if test="Feature != null and Feature != ''">
                d_feature,
            </if>
            <if test="Active != null and Active != ''">
                d_active,
            </if>
            <if test="Index != null and Index != ''">
                d_index,
            </if>
            <if test="userId != null and userId != ''">
                d_create_user_id,
            </if>
            <if test="createTime != null">
                d_create_time,
            </if>
            <if test="projectId != 0">
                d_project_id,
            </if>
            <if test="roomId != 0">
                d_room_id,
            </if>
            <if test="bindTime != null">
                d_bind_time,
            </if>
            <if test="userId != null and userId != ''">
                d_bind_user_id,
            </if>
            <if test="bindTime != null">
                d_update_time
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="MAC != null and MAC != ''">
                #{MAC},
            </if>
            <if test="GwMac != null and GwMac != ''">
                #{GwMac},
            </if>
            <if test="Device != null and Device != ''">
                #{Device},
            </if>
            <if test="Name != null and Name != ''">
                #{Name},
            </if>
            <if test="Feature != null and Feature != ''">
                #{Feature},
            </if>
            <if test="Active != null and Active != ''">
                #{Active},
            </if>
            <if test="Index != null and Index != ''">
                #{Index},
            </if>
            <if test="userId != null and userId != ''">
                #{userId},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="projectId != 0">
                #{projectId},
            </if>
            <if test="roomId != 0">
                #{roomId},
            </if>
            <if test="bindTime != null">
                #{bindTime},
            </if>
            <if test="userId != null and userId != ''">
                #{userId},
            </if>
            <if test="bindTime != null">
                #{bindTime}
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="GwMac != null and GwMac != ''">
                d_gw_mac = values(d_gw_mac),
            </if>
            <if test="Device != null and Device != ''">
                d_model = values(d_model),
            </if>
            <if test="Name != null and Name != ''">
                d_name = values(d_name),
            </if>
            <if test="Feature != null and Feature != ''">
                d_feature = values(d_feature),
            </if>
            <if test="Active != null and Active != ''">
                d_active = values(d_active),
            </if>
            <if test="Index != null and Index != ''">
                d_index = values(d_index),
            </if>
            <if test="userId != null and userId != ''">
                d_create_user_id = values(d_create_user_id),
            </if>
            <if test="createTime != null">
                d_create_time = values(d_create_time),
            </if>
            <if test="projectId != 0">
                d_project_id = values(d_project_id),
            </if>
            <if test="roomId != 0">
                d_room_id = values(d_room_id),
            </if>
            <if test="bindTime != null and roomId != 0">
                d_bind_time = values(d_bind_time),
            </if>
            <if test="userId != null and userId != '' and roomId != 0">
                d_bind_user_id = values(d_bind_user_id),
            </if>
            <if test="bindTime != null and roomId != 0">
                d_update_time = values(d_update_time)
            </if>
        </trim>
    </insert>

    <insert id="addBrowserDevice">
        insert into vi_browser_device(bd_browser_uuid, bd_device_mac, bd_user_id)
        values (#{browserUUID}, #{mac}, #{userId})
        on duplicate key
            update bd_device_mac = values(bd_device_mac),
                   bd_user_id = values(bd_user_id)
    </insert>

    <select id="getDeviceMacByBrowser" parameterType="string"
            resultType="string">
        select bd.bd_device_mac
        from vi_browser_device bd
        where bd.bd_browser_uuid = #{browserUUID}
        limit 1
    </select>

    <select id="getDeviceList"
            parameterType="com.vians.admin.request.query.DeviceQuery"
            resultType="com.vians.admin.model.DeviceDetailInfo">
        SELECT
            d.d_id AS id,
            d.d_mac AS MAC,
            d.d_gw_mac AS GwMac,
            d.d_model AS Device,
            d.d_name AS NAME,
            d.d_feature AS Feature,
            d.d_active AS Active,
            d.d_index AS idx,
            d.d_create_user_id AS userId,
            d.d_create_time AS createTime,
            d.d_ele AS ele,
            p.p_name AS projectName,
            c.c_name AS communityName,
            b.b_name AS buildingName,
            unit.u_name AS unitName,
            f.f_name AS floorName,
            r.r_name AS roomName,
            u.u_name AS createUserName
        FROM
            vi_device d
                LEFT JOIN vi_user u ON d.d_create_user_id = u.u_id
                LEFT JOIN vi_room r ON d.d_room_id = r.r_id
                LEFT JOIN vi_floor f ON r.r_floor_id = f.f_id
                LEFT JOIN vi_unit unit ON f.f_unit_id = unit.u_id
                LEFT JOIN vi_building b ON unit.u_building_id = b.b_id
                LEFT JOIN vi_community c ON b.b_community_id = c.c_id
                LEFT JOIN vi_project p ON d.d_project_id = p.p_id
        WHERE
            1 = 1
            <if test="projectId != 0">
                AND p.p_id = #{projectId}
            </if>
            <if test="communityId != 0">
                AND c.c_id = #{communityId}
            </if>
            <if test="buildingId != 0">
                AND b.b_id = #{buildingId}
            </if>
            <if test="unitId != 0">
                AND unit.u_id = #{unitId}
            </if>
            <if test="floorId != 0">
                AND f.f_id = #{floorId}
            </if>
            <if test="roomId != 0">
                AND r.r_id = #{roomId}
            </if>
            <if test="deviceModel != null and deviceModel != ''">
                AND d.d_model = #{deviceModel}
            </if>
            <if test="deviceName != null and deviceName != ''">
                AND d.d_name like CONCAT('%',#{deviceName},'%')
            </if>
            <if test="deviceFeature != null and deviceFeature != ''">
                AND d.d_feature = #{deviceFeature}
            </if>
            <if test="deviceMac != null and deviceMac != ''">
                AND d.d_mac = #{deviceMac}
            </if>
            <if test="gwMac != null and gwMac != ''">
                AND d.d_gw_mac = #{gwMac}
            </if>
    </select>

    <select id="getFreeDevices" resultType="com.vians.admin.model.DeviceBaseInfo">
        SELECT
            d.d_id AS id,
            d.d_mac AS MAC,
            d.d_gw_mac AS GwMac,
            d.d_model AS Device,
            d.d_name AS NAME,
            d.d_feature AS Feature,
            d.d_active AS Active,
            d.d_index AS idx,
            d.d_create_user_id AS userId,
            d.d_create_time AS createTime,
            d.d_ele AS ele,
            u.u_name AS createUserName
        FROM
            vi_device d
                LEFT JOIN vi_user u ON d.d_create_user_id = u.u_id
        WHERE (d.d_room_id is null or d.d_room_id = 0) and d.d_project_id = #{projectId}
    </select>

    <select id="getBindedDevice" resultType="com.vians.admin.model.DeviceBaseInfo">
        SELECT
            d.d_id AS id,
            d.d_mac AS MAC,
            d.d_gw_mac AS GwMac,
            d.d_model AS Device,
            d.d_name AS NAME,
            d.d_feature AS Feature,
            d.d_active AS Active,
            d.d_index AS idx,
            d.d_create_user_id AS userId,
            d.d_create_time AS createTime,
            d.d_ele AS ele,
            u.u_name AS bindUserName,
            d.d_is_default as isDefault,
            d.d_bind_time AS bindTime,
            d.d_is_default AS isDefault
        FROM
            vi_device d
                LEFT JOIN vi_user u ON d.d_bind_user_id = u.u_id
        WHERE d.d_room_id = #{roomId}
    </select>

    <update id="bindDevice">
        update
            vi_device
        set
            d_room_id = #{roomId},
            d_bind_time = #{bindTime},
            d_bind_user_id = #{userId},
            d_update_time = #{bindTime}
        where
            d_id = #{deviceId}
    </update>

    <update id="unbindDevice" parameterType="long">
        update
            vi_device
        set
            d_room_id = null
        where
            d_id = #{id}
    </update>

    <update id="unbindDevicesByRoomId" parameterType="long">
        update
            vi_device
        set
            d_room_id = null
        where
            d_room_id = #{roomId}
    </update>

    <delete id="deleteDeviceById" parameterType="long">
        delete from vi_device where d_id = #{id}
    </delete>

    <delete id="deleteDeviceByMac" parameterType="String">
        delete from vi_device where d_mac = #{mac}
    </delete>

    <select id="getLockFromRoom" resultType="com.vians.admin.model.DeviceBaseInfo">
        select
            d.d_id AS id,
            d.d_mac AS MAC,
            d.d_gw_mac AS GwMac,
            d.d_model AS Device,
            d.d_name AS NAME,
            d.d_feature AS Feature,
            d.d_active AS Active,
            d.d_index AS idx,
            d.d_create_user_id AS userId,
            d.d_create_time AS createTime,
            d.d_ele AS ele
        from vi_device d
        where d_room_id = #{roomId} and d_feature = 'LOCK'
        limit 1
    </select>

    <select id="getDeviceMacsByProject" parameterType="long" resultType="String">
        select d.d_mac from vi_device d
        where d.d_project_id = #{projectId}
    </select>

    <select id="getDevCount" resultType="int">
        select count(d.d_id) from vi_device d where d.d_project_id = #{projectId} and d.d_active = #{state}
    </select>

    <select id="getGwCount" resultType="int">
        SELECT
            COUNT( * )
        FROM
            xy_areadeviceinfo a
                LEFT JOIN xy_devicebaseinfo B ON a.ad_deviceid = B.db_ID
                LEFT JOIN xy_deviceproperty e ON a.ad_deviceid = e.dp_DeviceID
        WHERE
            e.dp_Online = #{state}
          AND a.ad_ManagerUser = #{rootId}
          AND B.db_Type = 96
    </select>

    <update id="setDeviceDefaultNoByRoom">
        update vi_device set d_is_default = 0 where d_room_id = #{roomId}
    </update>

    <update id="setDeviceDefaultYesById">
        update vi_device set d_is_default = 1 where d_id = #{deviceId}
    </update>
</mapper>
